syntax = "proto3";

package agnet.redis; // 패키지 이름을 설정합니다.

option csharp_namespace = "InfoGatherHub.HubProtos.Agent.Redis";


message RedisMemoryInfo {
    int32 used_memory = 1;
    string used_memory_human = 2;
    int32 used_memory_rss = 3;
    string used_memory_rss_human = 4;
    int32 used_memory_peak = 5;
    string used_memory_peak_human = 6;
    string used_memory_peak_perc = 7;
    int32 used_memory_overhead = 8;
    int32 used_memory_startup = 9;
    int32 used_memory_dataset = 10;
    string used_memory_dataset_perc = 11;
    int32 allocator_allocated = 12;
    int32 allocator_active = 13;
    int32 allocator_resident = 14;
    int32 total_system_memory = 15;
    string total_system_memory_human = 16;
    int32 used_memory_lua = 17;
    int32 used_memory_vm_eval = 18;
    string used_memory_lua_human = 19;
    int32 used_memory_scripts_eval = 20;
    int32 number_of_cached_scripts = 21;
    int32 number_of_functions = 22;
    int32 number_of_libraries = 23;
    int32 used_memory_vm_functions = 24;
    int32 used_memory_vm_total = 25;
    string used_memory_vm_total_human = 26;
    int32 used_memory_functions = 27;
    int32 used_memory_scripts = 28;
    string used_memory_scripts_human = 29;
    int32 max_memory = 30;
    string max_memory_human = 31;
    string max_memory_policy = 32;
    double allocator_frag_ratio = 33;
    int32 allocator_frag_bytes = 34;
    double allocator_rss_ratio = 35;
    int32 allocator_rss_bytes = 36;
    double rss_overhead_ratio = 37;
    int32 rss_overhead_bytes = 38;
    double mem_fragmentation_ratio = 39;
    int32 mem_fragmentation_bytes = 40;
    int32 mem_not_counted_for_evict = 41;
    int32 mem_replication_backlog = 42;
    int32 mem_total_replication_buffers = 43;
    int32 mem_clients_slaves = 44;
    int32 mem_clients_normal = 45;
    int32 mem_cluster_links = 46;
    int32 mem_aof_buffer = 47;
    string mem_allocator = 48;
    int32 active_defrag_running = 49;
    int32 lazy_free_pending_objects = 50;
    int32 lazy_freed_objects = 51;
  }